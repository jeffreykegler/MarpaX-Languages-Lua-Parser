optional laststat
)
)
optional explist
(
args
close
Name
:
f
Name
var
exp
exp
explist
optional explist
(
args
assert
Name
var
prefixexp
functioncall
stat
stat item
)
)
)
)
)
]
1
Number
exp
[
arg
Name
var
prefixexp
var
exp
explist
optional explist
(
args
loadfile
Name
var
exp
exp
explist
optional explist
(
args
assert
Name
var
exp
exp
explist
optional explist
(
args
dump
Name
.
string
Name
var
prefixexp
var
exp
exp
explist
optional explist
(
args
write
Name
:
f
Name
var
exp
exp
explist
optional explist
(
args
assert
Name
var
prefixexp
functioncall
stat
stat item
)
)
"wb"
double quoted string
String
exp
"luac.out"
double quoted string
String
exp
explist
optional explist
(
args
open
Name
.
io
Name
var
prefixexp
var
exp
exp
explist
optional explist
(
args
assert
Name
var
exp
exp
explist
=
f
Name
var
varlist
stat
stat item
)
"usage: lua luac.lua file.lua"
double quoted string
String
exp
nil
keyword nil
exp
==
]
2
Number
exp
[
arg
Name
var
prefixexp
var
exp
exp
and
keyword and
nil
keyword nil
exp
~=
]
1
Number
exp
[
arg
Name
var
prefixexp
var
exp
exp
exp
explist
optional explist
(
args
assert
Name
var
prefixexp
functioncall
stat
stat item
stat list
chunk
