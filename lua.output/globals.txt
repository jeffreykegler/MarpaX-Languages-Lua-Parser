optional laststat
end
keyword end
optional laststat
end
keyword end
optional else block
elseif sequence
optional laststat
)
"\n"
double quoted string
String
exp
op
Name
var
exp
l
Name
var
exp
"\t"
double quoted string
String
exp
g
Name
var
exp
explist
optional explist
(
args
write
Name
.
io
Name
var
prefixexp
var
prefixexp
functioncall
stat
stat item
end
keyword end
optional laststat
""
double quoted string
String
exp
explist
=
op
Name
var
varlist
stat
stat item
stat list
chunk
block
else
keyword else
optional else block
elseif sequence
optional laststat
"*"
double quoted string
String
exp
explist
=
op
Name
var
varlist
stat
stat item
stat list
chunk
block
then
keyword then
"S"
double quoted string
String
exp
==
op
Name
var
exp
exp
if
keyword if
stat
stat item
stat list
chunk
block
then
keyword then
ok
Name
var
exp
if
keyword if
stat
stat item
)
"%[%-?(%d*)%]%s*([GS])ETGLOBAL.-;%s+(.*)$"
double quoted string
String
exp
s
Name
var
exp
explist
optional explist
(
args
find
Name
.
string
Name
var
prefixexp
var
exp
exp
explist
=
optional namelist initialization
g
Name
op
Name
l
Name
_
Name
ok
Name
namelist
local
keyword local
stat
stat item
end
keyword end
optional else block
elseif sequence
break
keyword break
laststat
optional laststat
stat list
chunk
block
then
keyword then
nil
keyword nil
exp
==
s
Name
var
exp
exp
if
keyword if
stat
stat item
)
optional explist
(
args
read
Name
.
io
Name
var
prefixexp
var
exp
exp
explist
=
optional namelist initialization
s
Name
namelist
local
keyword local
stat
stat item
stat list
chunk
block
do
keyword do
1
Number
exp
while
keyword while
stat
stat item
stat list
chunk
