optional laststat
)
20
Number
exp
40
Number
exp
explist
optional explist
(
args
LIFE
Name
var
prefixexp
functioncall
stat
stat item
end
keyword end
optional laststat
end
keyword end
optional laststat
end
keyword end
optional else block
elseif sequence
break
keyword break
laststat
optional laststat
stat list
chunk
block
then
keyword then
2000
Number
exp
>
gen
Name
var
exp
exp
if
keyword if
stat
stat item
1
Number
exp
+
gen
Name
var
exp
exp
explist
=
gen
Name
var
varlist
stat
stat item
)
"\n"
double quoted string
String
exp
gen
Name
var
exp
"Life - generation "
double quoted string
String
exp
explist
optional explist
(
args
write
Name
var
prefixexp
functioncall
stat
stat item
)
optional explist
(
args
draw
Name
:
thisgen
Name
var
prefixexp
functioncall
stat
stat item
)
"\027[H"
double quoted string
String
exp
explist
optional explist
(
args
write
Name
var
prefixexp
functioncall
stat
stat item
thisgen
Name
var
exp
nextgen
Name
var
exp
explist
=
nextgen
Name
var
thisgen
Name
var
varlist
stat
stat item
)
nextgen
Name
var
exp
explist
optional explist
(
args
evolve
Name
:
thisgen
Name
var
prefixexp
functioncall
stat
stat item
stat list
chunk
block
do
keyword do
1
Number
exp
while
keyword while
stat
stat item
)
"\027[2J"
double quoted string
String
exp
explist
optional explist
(
args
write
Name
var
prefixexp
functioncall
stat
stat item
1
Number
exp
explist
=
optional namelist initialization
gen
Name
namelist
local
keyword local
stat
stat item
)
12
Number
exp
4
Number
exp
FISH
Name
var
exp
explist
optional explist
(
args
spawn
Name
:
thisgen
Name
var
prefixexp
functioncall
stat
stat item
)
10
Number
exp
25
Number
exp
EXPLODE
Name
var
exp
explist
optional explist
(
args
spawn
Name
:
thisgen
Name
var
prefixexp
functioncall
stat
stat item
)
4
Number
exp
5
Number
exp
GLIDER
Name
var
exp
explist
optional explist
(
args
spawn
Name
:
thisgen
Name
var
prefixexp
functioncall
stat
stat item
)
h
Name
var
exp
w
Name
var
exp
explist
optional explist
(
args
CELLS
Name
var
exp
exp
explist
=
optional namelist initialization
nextgen
Name
namelist
local
keyword local
stat
stat item
)
h
Name
var
exp
w
Name
var
exp
explist
optional explist
(
args
CELLS
Name
var
exp
exp
explist
=
optional namelist initialization
thisgen
Name
namelist
local
keyword local
stat
stat item
stat list
chunk
block
)
h
Name
w
Name
namelist
optional parlist
(
funcbody
optional colon name element
LIFE
Name
dotted name
funcname
function
keyword function
stat
stat item
}
5
Number
exp
=
h
Name
field
5
Number
exp
=
w
Name
field
1
Number
exp
field
0
Number
exp
field
0
Number
exp
field
0
Number
exp
field
1
Number
exp
field
1
Number
exp
field
0
Number
exp
field
1
Number
exp
field
0
Number
exp
field
1
Number
exp
field
1
Number
exp
field
0
Number
exp
field
0
Number
exp
field
0
Number
exp
field
1
Number
exp
field
0
Number
exp
field
1
Number
exp
field
1
Number
exp
field
1
Number
exp
field
0
Number
exp
field
1
Number
exp
field
0
Number
exp
field
0
Number
exp
field
0
Number
exp
field
1
Number
exp
field
fieldlist
{
tableconstructor
exp
explist
=
BUTTERFLY
Name
var
varlist
stat
stat item
}
4
Number
exp
=
h
Name
field
5
Number
exp
=
w
Name
field
0
Number
exp
field
1
Number
exp
field
0
Number
exp
field
0
Number
exp
field
1
Number
exp
field
1
Number
exp
field
0
Number
exp
field
0
Number
exp
field
0
Number
exp
field
0
Number
exp
field
1
Number
exp
field
0
Number
exp
field
0
Number
exp
field
0
Number
exp
field
1
Number
exp
field
1
Number
exp
field
1
Number
exp
field
1
Number
exp
field
1
Number
exp
field
0
Number
exp
field
fieldlist
{
tableconstructor
exp
explist
=
FISH
Name
var
varlist
stat
stat item
}
4
Number
exp
=
h
Name
field
3
Number
exp
=
w
Name
field
0
Number
exp
field
1
Number
exp
field
0
Number
exp
field
1
Number
exp
field
0
Number
exp
field
1
Number
exp
field
1
Number
exp
field
1
Number
exp
field
1
Number
exp
field
0
Number
exp
field
1
Number
exp
field
0
Number
exp
field
fieldlist
{
tableconstructor
exp
explist
=
EXPLODE
Name
var
varlist
stat
stat item
}
3
Number
exp
=
h
Name
field
3
Number
exp
=
w
Name
field
1
Number
exp
field
1
Number
exp
field
0
Number
exp
field
1
Number
exp
field
0
Number
exp
field
1
Number
exp
field
1
Number
exp
field
0
Number
exp
field
0
Number
exp
field
fieldlist
{
tableconstructor
exp
explist
=
GLIDER
Name
var
varlist
stat
stat item
}
3
Number
exp
=
h
Name
field
3
Number
exp
=
w
Name
field
1
Number
exp
field
1
Number
exp
field
1
Number
exp
field
1
Number
exp
field
0
Number
exp
field
1
Number
exp
field
1
Number
exp
field
0
Number
exp
field
1
Number
exp
field
fieldlist
{
tableconstructor
exp
explist
=
HEART
Name
var
varlist
stat
stat item
end
keyword end
c
Name
var
exp
explist
optional explist
return
keyword return
laststat
optional laststat
draw
Name
.
_CELLS
Name
var
prefixexp
var
exp
explist
=
draw
Name
.
c
Name
var
prefixexp
var
varlist
stat
stat item
evolve
Name
.
_CELLS
Name
var
prefixexp
var
exp
explist
=
evolve
Name
.
c
Name
var
prefixexp
var
varlist
stat
stat item
spawn
Name
.
_CELLS
Name
var
prefixexp
var
exp
explist
=
spawn
Name
.
c
Name
var
prefixexp
var
varlist
stat
stat item
)
h
Name
var
exp
w
Name
var
exp
explist
optional explist
(
args
ARRAY2D
Name
var
exp
exp
explist
=
optional namelist initialization
c
Name
namelist
local
keyword local
stat
stat item
stat list
chunk
block
)
h
Name
w
Name
namelist
optional parlist
(
funcbody
optional colon name element
CELLS
Name
dotted name
funcname
function
keyword function
stat
stat item
end
keyword end
optional laststat
)
out
Name
var
exp
explist
optional explist
(
args
write
Name
var
prefixexp
functioncall
stat
stat item
end
keyword end
optional laststat
"\n"
double quoted string
String
exp
..
out
Name
var
exp
exp
explist
=
out
Name
var
varlist
stat
stat item
end
keyword end
optional laststat
)
DEAD
Name
var
exp
or
keyword or
)
ALIVE
Name
var
exp
and
keyword and
)
0
Number
exp
>
]
x
Name
var
exp
[
]
y
Name
var
exp
[
self
Name
var
prefixexp
var
prefixexp
var
exp
exp
(
exp
exp
(
exp
exp
(
exp
..
out
Name
var
exp
exp
explist
=
out
Name
var
varlist
stat
stat item
stat list
chunk
block
do
keyword do
w
Name
.
self
Name
var
prefixexp
var
exp
,
1
Number
exp
=
x
Name
for
keyword for
stat
stat item
stat list
chunk
block
do
keyword do
h
Name
.
self
Name
var
prefixexp
var
exp
,
1
Number
exp
=
y
Name
for
keyword for
stat
stat item
""
double quoted string
String
exp
explist
=
optional namelist initialization
out
Name
namelist
local
keyword local
stat
stat item
stat list
chunk
block
)
optional parlist
(
funcbody
draw
Name
:
optional colon name element
_CELLS
Name
dotted name
funcname
function
keyword function
stat
stat item
end
keyword end
optional laststat
end
keyword end
optional laststat
1
Number
exp
-
yi
Name
var
exp
exp
1
Number
exp
+
yp1
Name
var
exp
exp
yp1
Name
var
exp
y
Name
var
exp
explist
=
yi
Name
var
yp1
Name
var
y
Name
var
ym1
Name
var
varlist
stat
stat item
end
keyword end
optional laststat
1
Number
exp
-
xi
Name
var
exp
exp
1
Number
exp
+
xp1
Name
var
exp
exp
xp1
Name
var
exp
x
Name
var
exp
explist
=
xi
Name
var
xp1
Name
var
x
Name
var
xm1
Name
var
varlist
stat
stat item
0
Number
exp
or
keyword or
)
1
Number
exp
and
keyword and
)
3
Number
exp
==
sum
Name
var
exp
exp
(
exp
exp
(
exp
or
keyword or
)
]
x
Name
var
exp
[
]
y
Name
var
exp
[
self
Name
var
prefixexp
var
prefixexp
var
exp
and
keyword and
)
2
Number
exp
==
sum
Name
var
exp
exp
(
exp
exp
(
exp
exp
exp
explist
=
]
x
Name
var
exp
[
]
y
Name
var
exp
[
next
Name
var
prefixexp
var
prefixexp
var
varlist
stat
stat item
]
xp1
Name
var
exp
[
]
yp1
Name
var
exp
[
self
Name
var
prefixexp
var
prefixexp
var
exp
+
]
x
Name
var
exp
[
]
yp1
Name
var
exp
[
self
Name
var
prefixexp
var
prefixexp
var
exp
+
]
xm1
Name
var
exp
[
]
yp1
Name
var
exp
[
self
Name
var
prefixexp
var
prefixexp
var
exp
+
]
xp1
Name
var
exp
[
]
y
Name
var
exp
[
self
Name
var
prefixexp
var
prefixexp
var
exp
+
]
xm1
Name
var
exp
[
]
y
Name
var
exp
[
self
Name
var
prefixexp
var
prefixexp
var
exp
+
]
xp1
Name
var
exp
[
]
ym1
Name
var
exp
[
self
Name
var
prefixexp
var
prefixexp
var
exp
+
]
x
Name
var
exp
[
]
ym1
Name
var
exp
[
self
Name
var
prefixexp
var
prefixexp
var
exp
+
]
xm1
Name
var
exp
[
]
ym1
Name
var
exp
[
self
Name
var
prefixexp
var
prefixexp
var
exp
exp
exp
exp
exp
exp
exp
exp
explist
=
optional namelist initialization
sum
Name
namelist
local
keyword local
stat
stat item
stat list
chunk
block
do
keyword do
0
Number
exp
>
xi
Name
var
exp
exp
while
keyword while
stat
stat item
w
Name
.
self
Name
var
prefixexp
var
exp
1
Number
exp
w
Name
.
self
Name
var
prefixexp
var
exp
1
Number
exp
-
w
Name
.
self
Name
var
prefixexp
var
exp
exp
explist
=
optional namelist initialization
xi
Name
xp1
Name
x
Name
xm1
Name
namelist
local
keyword local
stat
stat item
stat list
chunk
block
do
keyword do
0
Number
exp
>
yi
Name
var
exp
exp
while
keyword while
stat
stat item
h
Name
.
self
Name
var
prefixexp
var
exp
1
Number
exp
h
Name
.
self
Name
var
prefixexp
var
exp
1
Number
exp
-
h
Name
.
self
Name
var
prefixexp
var
exp
exp
explist
=
optional namelist initialization
yi
Name
yp1
Name
y
Name
ym1
Name
namelist
local
keyword local
stat
stat item
stat list
chunk
block
)
next
Name
namelist
optional parlist
(
funcbody
evolve
Name
:
optional colon name element
_CELLS
Name
dotted name
funcname
function
keyword function
stat
stat item
end
keyword end
optional laststat
end
keyword end
optional laststat
end
keyword end
optional laststat
]
1
Number
exp
+
x
Name
var
exp
+
w
Name
.
shape
Name
var
prefixexp
var
exp
*
y
Name
var
exp
exp
exp
exp
[
shape
Name
var
prefixexp
var
exp
explist
=
]
x
Name
var
exp
+
left
Name
var
exp
exp
[
]
y
Name
var
exp
+
top
Name
var
exp
exp
[
self
Name
var
prefixexp
var
prefixexp
var
varlist
stat
stat item
stat list
chunk
block
do
keyword do
1
Number
exp
-
w
Name
.
shape
Name
var
prefixexp
var
exp
exp
,
0
Number
exp
=
x
Name
for
keyword for
stat
stat item
stat list
chunk
block
do
keyword do
1
Number
exp
-
h
Name
.
shape
Name
var
prefixexp
var
exp
exp
,
0
Number
exp
=
y
Name
for
keyword for
stat
stat item
stat list
chunk
block
)
top
Name
left
Name
shape
Name
namelist
optional parlist
(
funcbody
spawn
Name
:
optional colon name element
_CELLS
Name
dotted name
funcname
function
keyword function
stat
stat item
}
{
tableconstructor
exp
explist
=
_CELLS
Name
var
varlist
stat
stat item
end
keyword end
t
Name
var
exp
explist
optional explist
return
keyword return
laststat
optional laststat
end
keyword end
optional laststat
end
keyword end
optional laststat
0
Number
exp
explist
=
]
x
Name
var
exp
[
]
y
Name
var
exp
[
t
Name
var
prefixexp
var
prefixexp
var
varlist
stat
stat item
stat list
chunk
block
do
keyword do
w
Name
var
exp
,
1
Number
exp
=
x
Name
for
keyword for
stat
stat item
}
{
tableconstructor
exp
explist
=
]
y
Name
var
exp
[
t
Name
var
prefixexp
var
varlist
stat
stat item
stat list
chunk
block
do
keyword do
h
Name
var
exp
,
1
Number
exp
=
y
Name
for
keyword for
stat
stat item
}
h
Name
var
exp
=
h
Name
field
w
Name
var
exp
=
w
Name
field
fieldlist
{
tableconstructor
exp
explist
=
optional namelist initialization
t
Name
namelist
local
keyword local
stat
stat item
stat list
chunk
block
)
h
Name
w
Name
namelist
optional parlist
(
funcbody
optional colon name element
ARRAY2D
Name
dotted name
funcname
function
keyword function
stat
stat item
end
keyword end
optional laststat
end
keyword end

block
do
keyword do
10000
Number
exp
,
1
Number
exp
=
i
Name
for
keyword for
stat
stat item
stat list
chunk
block
)
optional parlist
(
funcbody
optional colon name element
delay
Name
dotted name
funcname
function
keyword function
stat
stat item
"-"
double quoted string
String
exp
explist
=
DEAD
Name
var
varlist
stat
stat item
"O"
double quoted string
String
exp
explist
=
ALIVE
Name
var
varlist
stat
stat item
"þ"
double quoted string
String
exp
explist
=
DEAD
Name
var
varlist
stat
stat item
"¥"
double quoted string
String
exp
explist
=
ALIVE
Name
var
varlist
stat
stat item
write
Name
.
io
Name
var
prefixexp
var
exp
explist
=
optional namelist initialization
write
Name
namelist
local
keyword local
stat
stat item
stat list
chunk
