optional laststat
)
c
Name
var
exp
b
Name
var
exp
a
Name
var
exp
explist
optional explist
(
args
print
Name
var
prefixexp
functioncall
stat
stat item
200
Number
exp
explist
=
b
Name
var
varlist
stat
stat item
nil
keyword nil
exp
explist
=
b
Name
var
varlist
stat
stat item
20
Number
exp
explist
=
b
Name
var
varlist
stat
stat item
10
Number
exp
explist
=
a
Name
var
varlist
stat
stat item
2
Number
exp
explist
=
b
Name
var
varlist
stat
stat item
1
Number
exp
explist
=
a
Name
var
varlist
stat
stat item
end
keyword end
optional laststat
)
}
set
Name
var
exp
=
__newindex
Name
field
g
Name
var
exp
=
__index
Name
field
fieldlist
{
tableconstructor
exp
)
optional explist
(
args
getfenv
Name
var
exp
exp
explist
optional explist
(
args
setmetatable
Name
var
prefixexp
functioncall
stat
stat item
end
keyword end
optional laststat
value
Name
var
exp
explist
=
]
name
Name
var
exp
[
g
Name
var
prefixexp
var
varlist
stat
stat item
)
value
Name
var
exp
]
name
Name
var
exp
[
g
Name
var
prefixexp
var
exp
name
Name
var
exp
explist
optional explist
(
args
log
Name
var
prefixexp
functioncall
stat
stat item
stat list
chunk
block
)
value
Name
name
Name
t
Name
namelist
optional parlist
(
funcbody
function
keyword function
function
exp
explist
=
optional namelist initialization
set
Name
namelist
local
keyword local
stat
stat item
}
{
tableconstructor
exp
explist
=
optional namelist initialization
g
Name
namelist
local
keyword local
stat
stat item
end
keyword end
optional laststat
)
"\n"
double quoted string
String
exp
")"
double quoted string
String
exp
)
old
Name
var
exp
explist
optional explist
(
args
tostring
Name
var
exp
exp
" (was "
double quoted string
String
exp
)
new
Name
var
exp
explist
optional explist
(
args
tostring
Name
var
exp
exp
" is now "
double quoted string
String
exp
name
Name
var
exp
": "
double quoted string
String
exp
explist
optional explist
(
args
write
Name
.
io
Name
var
prefixexp
var
prefixexp
functioncall
stat
stat item
end
keyword end
optional else block
elseif sequence
optional laststat
)
line
Name
var
exp
":"
double quoted string
String
exp
explist
optional explist
(
args
write
Name
.
io
Name
var
prefixexp
var
prefixexp
functioncall
stat
stat item
stat list
chunk
block
then
keyword then
0
Number
exp
>=
line
Name
var
exp
exp
if
keyword if
stat
stat item
)
short_src
Name
.
t
Name
var
prefixexp
var
exp
explist
optional explist
(
args
write
Name
.
io
Name
var
prefixexp
var
prefixexp
functioncall
stat
stat item
currentline
Name
.
t
Name
var
prefixexp
var
exp
explist
=
optional namelist initialization
line
Name
namelist
local
keyword local
stat
stat item
)
"Sl"
double quoted string
String
exp
3
Number
exp
explist
optional explist
(
args
getinfo
Name
.
debug
Name
var
prefixexp
var
exp
exp
explist
=
optional namelist initialization
t
Name
namelist
local
keyword local
stat
stat item
stat list
chunk
block
)
new
Name
old
Name
name
Name
namelist
optional parlist
(
funcbody
function
keyword function
function
exp
explist
=
optional namelist initialization
log
Name
namelist
local
keyword local
stat
stat item
end
keyword end
optional laststat
end
keyword end
)
a
Name
var
exp
explist
optional explist
(
args
_tostring
Name
var
exp
exp
explist
optional explist
return
keyword return
laststat
optional laststat
stat list
chunk
block
else
keyword else
optional else block
elseif sequence
)
a
Name
var
exp
"%q"
double quoted string
String
exp
explist
optional explist
(
args
format
Name
.
string
Name
var
prefixexp
var
exp
exp
explist
optional explist
return
keyword return
laststat
optional laststat
stat list
chunk
block
then
keyword then
"string"
double quoted string
String
exp
==
)
a
Name
var
exp
explist
optional explist
(
args
type
Name
var
exp
exp
exp
if
keyword if
stat
stat item
stat list
chunk
block
)
a
Name
namelist
optional parlist
(
funcbody
function
keyword function
function
exp
explist
=
optional namelist initialization
tostring
Name
namelist
local
keyword local
stat
stat item
tostring
Name
var
exp
explist
=
optional namelist initialization
_tostring
Name
namelist
local
keyword local
stat
stat item
stat list
chunk
block
do
keyword do
stat
stat item
stat list
chunk
