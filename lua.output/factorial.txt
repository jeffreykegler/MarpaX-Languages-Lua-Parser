optional laststat
end
keyword end
optional laststat
)
n
Name
var
exp
explist
optional explist
(
args
test
Name
var
prefixexp
functioncall
stat
stat item
stat list
chunk
block
do
keyword do
16
Number
exp
,
0
Number
exp
=
n
Name
for
keyword for
stat
stat item
end
keyword end
optional laststat
)
"\n"
double quoted string
String
exp
)
x
Name
var
exp
explist
optional explist
(
args
factorial
Name
var
exp
exp
"! = "
double quoted string
String
exp
x
Name
var
exp
explist
optional explist
(
args
write
Name
.
io
Name
var
prefixexp
var
prefixexp
functioncall
stat
stat item
stat list
chunk
block
)
x
Name
namelist
optional parlist
(
funcbody
optional colon name element
test
Name
dotted name
funcname
function
keyword function
stat
stat item
)
F
Name
var
exp
explist
optional explist
(
args
Y
Name
var
exp
exp
explist
=
factorial
Name
var
varlist
stat
stat item
end
keyword end
end
keyword end
optional laststat
end
keyword end
)
1
Number
exp
-
n
Name
var
exp
exp
explist
optional explist
(
args
f
Name
var
exp
exp
*
n
Name
var
exp
exp
explist
optional explist
return
keyword return
laststat
optional laststat
stat list
chunk
block
else
keyword else
optional else block
elseif sequence
1
Number
exp
explist
optional explist
return
keyword return
laststat
optional laststat
stat list
chunk
block
then
keyword then
0
Number
exp
==
n
Name
var
exp
exp
if
keyword if
stat
stat item
stat list
chunk
block
)
n
Name
namelist
optional parlist
(
funcbody
function
keyword function
function
exp
explist
optional explist
return
keyword return
laststat
optional laststat
stat list
chunk
block
)
f
Name
namelist
optional parlist
(
funcbody
function
keyword function
function
exp
explist
=
F
Name
var
varlist
stat
stat item
end
keyword end
)
end
keyword end
)
end
keyword end
)
x
Name
var
exp
explist
optional explist
(
args
c
Name
var
exp
exp
explist
optional explist
return
keyword return
laststat
optional laststat
)
f
Name
var
exp
explist
optional explist
(
args
f
Name
var
exp
exp
explist
=
optional namelist initialization
c
Name
namelist
local
keyword local
stat
stat item
stat list
chunk
block
)
x
Name
namelist
optional parlist
(
funcbody
function
keyword function
function
exp
explist
optional explist
(
args
g
Name
var
exp
exp
explist
optional explist
return
keyword return
laststat
optional laststat
stat list
chunk
block
)
f
Name
namelist
optional parlist
(
funcbody
function
keyword function
function
exp
explist
optional explist
(
args
a
Name
var
exp
exp
explist
optional explist
return
keyword return
laststat
optional laststat
end
keyword end
)
f
Name
var
exp
explist
optional explist
(
args
f
Name
var
exp
exp
explist
optional explist
return
keyword return
laststat
optional laststat
stat list
chunk
block
)
f
Name
namelist
optional parlist
(
funcbody
function
keyword function
function
exp
explist
=
optional namelist initialization
a
Name
namelist
local
keyword local
stat
stat item
stat list
chunk
block
)
g
Name
namelist
optional parlist
(
funcbody
function
keyword function
function
exp
explist
=
Y
Name
var
varlist
stat
stat item
stat list
chunk
