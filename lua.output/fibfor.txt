optional laststat
end
keyword end
optional laststat
)
i
Name
var
exp
explist
optional explist
(
args
print
Name
var
prefixexp
functioncall
stat
stat item
stat list
chunk
block
do
keyword do
)
1000
Number
exp
explist
optional explist
(
args
generatefib
Name
var
exp
exp
explist
in
keyword in
i
Name
namelist
for
keyword for
stat
stat item
end
keyword end
)
end
keyword end
optional laststat
end
keyword end
optional laststat
b
Name
var
exp
+
a
Name
var
exp
exp
b
Name
var
exp
explist
=
b
Name
var
a
Name
var
varlist
stat
stat item
)
a
Name
var
exp
explist
optional explist
(
args
yield
Name
.
coroutine
Name
var
prefixexp
var
prefixexp
functioncall
stat
stat item
stat list
chunk
block
do
keyword do
n
Name
var
exp
<=
a
Name
var
exp
exp
while
keyword while
stat
stat item
1
Number
exp
1
Number
exp
explist
=
optional namelist initialization
b
Name
a
Name
namelist
local
keyword local
stat
stat item
stat list
chunk
block
)
optional parlist
(
funcbody
function
keyword function
function
exp
explist
optional explist
(
args
wrap
Name
.
coroutine
Name
var
prefixexp
var
exp
exp
explist
optional explist
return
keyword return
laststat
optional laststat
stat list
chunk
block
)
n
Name
namelist
optional parlist
(
funcbody
optional colon name element
generatefib
Name
dotted name
funcname
function
keyword function
stat
stat item
stat list
chunk
